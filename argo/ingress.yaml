apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-application-ingress
  annotations:
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '10'
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '3'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-FS-1-2-Res-2020-10
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/force-target-group-creation: "true"
    alb.ingress.kubernetes.io/target-group-name: argoistio-tg
    external-dns.alpha.kubernetes.io/hostname: argoistio.xfm.sws.siemens.com
    alb.ingress.kubernetes.io/target-group-attributes: >-
      deregistration_delay.timeout_seconds=120
    alb.ingress.kubernetes.io/target-type: ip
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/actions.forward-single: >
      {"type":"forward","targetGroupARN": "arn:aws:elasticloadbalancing:eu-central-1:238720913587:targetgroup/k8s-ingressg-istiopri-6245b06da8/ad7a593de8e69ec3"}
spec:
  rules:
  - host: argoistio.xfm.sws.siemens.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: istio-private-ingressgateway
            port:
              number: 80
